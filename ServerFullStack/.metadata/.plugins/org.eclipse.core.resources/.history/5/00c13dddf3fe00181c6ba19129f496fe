package com.kevin.myshop.entity.models;

import java.io.Serializable;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;

import org.springframework.web.bind.annotation.CrossOrigin;

@Entity
@Table(name = "products")
@CrossOrigin("*")
public class Products implements Serializable {

	private static final long serialVersionUID = 1L;
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private long product_id;
	
	@ManyToOne
	@JoinColumn(name = "category")
	private Categories category;
	
	@NotEmpty
	private String name;
	
	@NotNull
	private float price;
	
	@NotNull
	private int units;
	
	@ManyToMany(fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE })
	private Set<Purchases> purchases;

	public long getProduct_id() {
		return product_id;
	}

	public void setProduct_id(long product_id) {
		this.product_id = product_id;
	}

	public Categories getCategory() {
		return category;
	}

	public void setCategory(Categories category) {
		this.category = category;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public float getPrice() {
		return price;
	}

	public void setPrice(float price) {
		this.price = price;
	}

	public int getUnits() {
		return units;
	}

	public void setUnits(int units) {
		this.units = units;
	}

	public Set<Purchases> getPurchases() {
		return purchases;
	}

	public void setPurchases(Set<Purchases> purchases) {
		this.purchases = purchases;
	}

	public Products(Categories category, @NotEmpty String name, @NotNull float price, @NotNull int units,
			Set<Purchases> purchases) {
		super();
		this.category = category;
		this.name = name;
		this.price = price;
		this.units = units;
		this.purchases = purchases;
	}

	public Products() {
		
	}
	
}
